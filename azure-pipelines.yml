# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include: 
      - dev
      - hotfix/*
  tags:
    include:
      - v*

variables:
  - group: 'vendr'
  - name: 'vmImageName'
    value: 'vs2017-win2016'
  - name: 'nuGetOrgServiceCreds'
    value: 'NuGet.org (Vendr)'
  - name: 'packageName'
    value: 'Vendr.PaymentProviders.PayPal'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: MSBuild@1
      displayName: 'Build solution'
      inputs:
        solution: 'build/build.proj'
        configuration: 'Release'
        msbuildArguments: '-target:PrepareAndPackageAll -property:ArtifactsDir=$(Build.ArtifactStagingDirectory)'

    - publish: $(Build.ArtifactStagingDirectory)
      displayName: 'Publish Artifacts'
      artifact: BuildArtifacts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:

          steps:
          - task: DotNetCoreInstaller@0
            inputs:
              version: 2.2.103

          - powershell: |
              # get the umbraco package file (assumes there is just one zip file package)
              $f = (Get-ChildItem -Path "$(Pipeline.Workspace)\BuildArtifacts\packages\*" -File -Include $(packageName).*.zip | Select-Object -First 1).FullName
              # assign the filename to a variable        
              echo "$f"       
              echo "##vso[task.setvariable variable=umbracoPackageFile]$f" 
            displayName: 'Get Umbraco Package path'

          - script: |
              dotnet tool install --global Umbraco.Tools.Packages
            displayName: 'Install UmbPack'

          - script: |
              umbpack push $(umbracoPackageFile) -k %OUR_UMBRACO_API_KEY% -w v860,v850,v840,v830,v820 -c false -a $(packageName).*.zip 
            displayName: 'Deploy to Our Umbraco'
            env:
              OUR_UMBRACO_API_KEY: $(our-umbraco-api-key)